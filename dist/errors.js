"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ErrorCode = void 0;
var ErrorCode;
(function (ErrorCode) {
    // Configuration Errors (1000-1099)
    ErrorCode["ERR_CONFIG_NOT_FOUND"] = "ERR_CONFIG_NOT_FOUND";
    ErrorCode["ERR_CONFIG_INVALID_NETWORK"] = "ERR_CONFIG_INVALID_NETWORK";
    ErrorCode["ERR_CONFIG_INVALID_PORT"] = "ERR_CONFIG_INVALID_PORT";
    ErrorCode["ERR_ENV_VAR_MISSING"] = "ERR_ENV_VAR_MISSING";
    ErrorCode["ERR_ENV_VAR_INVALID"] = "ERR_ENV_VAR_INVALID";
    ErrorCode["ERR_REGISTRY_NOT_FOUND"] = "ERR_REGISTRY_NOT_FOUND";
    // Initialization Errors (1100-1199)
    ErrorCode["ERR_NOT_INITIALIZED"] = "ERR_NOT_INITIALIZED";
    ErrorCode["ERR_ALREADY_INITIALIZED"] = "ERR_ALREADY_INITIALIZED";
    ErrorCode["ERR_STORAGE_NOT_CONFIGURED"] = "ERR_STORAGE_NOT_CONFIGURED";
    ErrorCode["ERR_NOT_IMPLEMENTED"] = "ERR_NOT_IMPLEMENTED";
    // Validation Errors (2000-2099)
    ErrorCode["ERR_INVALID_TRANSACTION"] = "ERR_INVALID_TRANSACTION";
    ErrorCode["ERR_INVALID_BLOCK"] = "ERR_INVALID_BLOCK";
    ErrorCode["ERR_INVALID_SIGNATURE"] = "ERR_INVALID_SIGNATURE";
    ErrorCode["ERR_INVALID_ADDRESS"] = "ERR_INVALID_ADDRESS";
    ErrorCode["ERR_INVALID_AMOUNT"] = "ERR_INVALID_AMOUNT";
    ErrorCode["ERR_INVALID_SEQUENCE"] = "ERR_INVALID_SEQUENCE";
    // Crypto Errors (2100-2199)
    ErrorCode["ERR_INVALID_PRIVATE_KEY"] = "ERR_INVALID_PRIVATE_KEY";
    ErrorCode["ERR_INVALID_PUBLIC_KEY"] = "ERR_INVALID_PUBLIC_KEY";
    ErrorCode["ERR_SIGNING_FAILED"] = "ERR_SIGNING_FAILED";
    ErrorCode["ERR_VERIFICATION_FAILED"] = "ERR_VERIFICATION_FAILED";
    ErrorCode["ERR_ENCRYPTION_FAILED"] = "ERR_ENCRYPTION_FAILED";
    ErrorCode["ERR_DECRYPTION_FAILED"] = "ERR_DECRYPTION_FAILED";
    // State Errors (3000-3099)
    ErrorCode["ERR_INSUFFICIENT_BALANCE"] = "ERR_INSUFFICIENT_BALANCE";
    ErrorCode["ERR_INSUFFICIENT_DEPOSIT"] = "ERR_INSUFFICIENT_DEPOSIT";
    ErrorCode["ERR_ACCOUNT_NOT_FOUND"] = "ERR_ACCOUNT_NOT_FOUND";
    ErrorCode["ERR_DUPLICATE_TRANSACTION"] = "ERR_DUPLICATE_TRANSACTION";
    ErrorCode["ERR_DUPLICATE_BLOCK"] = "ERR_DUPLICATE_BLOCK";
    // Network/Sync Errors (4000-4099)
    ErrorCode["ERR_PEER_UNREACHABLE"] = "ERR_PEER_UNREACHABLE";
    ErrorCode["ERR_PEER_UNKNOWN"] = "ERR_PEER_UNKNOWN";
    ErrorCode["ERR_BLOCK_NOT_FOUND"] = "ERR_BLOCK_NOT_FOUND";
    ErrorCode["ERR_SYNC_FAILED"] = "ERR_SYNC_FAILED";
    ErrorCode["ERR_CHAIN_DIVERGED"] = "ERR_CHAIN_DIVERGED";
    // Consensus Errors (5000-5099)
    ErrorCode["ERR_NO_GENESIS_KEYS"] = "ERR_NO_GENESIS_KEYS";
    ErrorCode["ERR_NO_VALIDATORS"] = "ERR_NO_VALIDATORS";
    ErrorCode["ERR_INSUFFICIENT_ATTESTATIONS"] = "ERR_INSUFFICIENT_ATTESTATIONS";
    ErrorCode["ERR_INVALID_ATTESTATION"] = "ERR_INVALID_ATTESTATION";
    ErrorCode["ERR_DEPOSIT_TOO_LOW"] = "ERR_DEPOSIT_TOO_LOW";
    ErrorCode["ERR_CONSENSUS_NO_ACCOUNTABLE_NODES"] = "ERR_CONSENSUS_NO_ACCOUNTABLE_NODES";
    ErrorCode["ERR_CONSENSUS_INVALID_PRODUCER"] = "ERR_CONSENSUS_INVALID_PRODUCER";
    ErrorCode["ERR_CONSENSUS_INVALID_BLOCK"] = "ERR_CONSENSUS_INVALID_BLOCK";
    ErrorCode["ERR_CONSENSUS_VALIDATION_FAILED"] = "ERR_CONSENSUS_VALIDATION_FAILED";
    ErrorCode["ERR_CONSENSUS_BLOCK_COUNT_MISMATCH"] = "ERR_CONSENSUS_BLOCK_COUNT_MISMATCH";
    // Contract Errors (6000-6099)
    ErrorCode["ERR_CONTRACT_NOT_FOUND"] = "ERR_CONTRACT_NOT_FOUND";
    ErrorCode["ERR_CONTRACT_EXECUTION_FAILED"] = "ERR_CONTRACT_EXECUTION_FAILED";
    ErrorCode["ERR_CONTRACT_METHOD_NOT_FOUND"] = "ERR_CONTRACT_METHOD_NOT_FOUND";
    // REST API Errors (7000-7099)
    ErrorCode["ERR_INVALID_JSON"] = "ERR_INVALID_JSON";
    ErrorCode["ERR_NONCANONICAL_JSON"] = "ERR_NONCANONICAL_JSON";
    ErrorCode["ERR_UNAUTHORIZED"] = "ERR_UNAUTHORIZED";
    ErrorCode["ERR_FORBIDDEN"] = "ERR_FORBIDDEN";
    // Consortium Errors (8000-8099)
    ErrorCode["ERR_CONSORTIUM_EXISTS"] = "ERR_CONSORTIUM_EXISTS";
    ErrorCode["ERR_CONSORTIUM_NOT_FOUND"] = "ERR_CONSORTIUM_NOT_FOUND";
    ErrorCode["ERR_INVALID_CONSORTIUM_ID"] = "ERR_INVALID_CONSORTIUM_ID";
    ErrorCode["ERR_INVALID_CONSORTIUM_META"] = "ERR_INVALID_CONSORTIUM_META";
    ErrorCode["ERR_INVALID_JURISDICTION"] = "ERR_INVALID_JURISDICTION";
    ErrorCode["ERR_INSUFFICIENT_ASSETS"] = "ERR_INSUFFICIENT_ASSETS";
    ErrorCode["ERR_MEMBER_NOT_FOUND"] = "ERR_MEMBER_NOT_FOUND";
    ErrorCode["ERR_INVALID_STATUS"] = "ERR_INVALID_STATUS";
    ErrorCode["ERR_INSUFFICIENT_SIGNATURES"] = "ERR_INSUFFICIENT_SIGNATURES";
    // Key Custody Errors (8100-8199)
    ErrorCode["ERR_KEY_GENERATION_FAILED"] = "ERR_KEY_GENERATION_FAILED";
    ErrorCode["ERR_KEY_NOT_FOUND"] = "ERR_KEY_NOT_FOUND";
    ErrorCode["ERR_KEY_ALREADY_EXISTS"] = "ERR_KEY_ALREADY_EXISTS";
    // Generic/Unknown (9999)
    ErrorCode["ERR_INTERNAL"] = "ERR_INTERNAL";
    ErrorCode["ERR_UNKNOWN"] = "ERR_UNKNOWN";
})(ErrorCode || (exports.ErrorCode = ErrorCode = {}));
